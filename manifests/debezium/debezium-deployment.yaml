# Debezium CDC Connector for YugabyteDB Multi-Zone
# Streams database changes to Redpanda/Kafka for real-time event processing

apiVersion: apps/v1
kind: Deployment
metadata:
  name: debezium-yugabytedb-connector
  namespace: kafka
  labels:
    app: debezium
    component: yugabytedb-connector
    environment: production
spec:
  replicas: 2  # HA for production
  selector:
    matchLabels:
      app: debezium
      component: yugabytedb-connector
  template:
    metadata:
      labels:
        app: debezium
        component: yugabytedb-connector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: debezium-connector
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: debezium-connector
        image: debezium/connect:2.4
        ports:
        - containerPort: 8083
          name: rest-api
        - containerPort: 8778
          name: jolokia
        env:
        # Kafka/Redpanda configuration
        - name: BOOTSTRAP_SERVERS
          value: "redpanda-0.redpanda.kafka.svc.cluster.local:9092,redpanda-1.redpanda.kafka.svc.cluster.local:9092,redpanda-2.redpanda.kafka.svc.cluster.local:9092"
        - name: GROUP_ID
          value: "yugabytedb-cdc-group"
        - name: CONFIG_STORAGE_TOPIC
          value: "yugabytedb-cdc-configs"
        - name: OFFSET_STORAGE_TOPIC
          value: "yugabytedb-cdc-offsets"
        - name: STATUS_STORAGE_TOPIC
          value: "yugabytedb-cdc-status"
        
        # YugabyteDB Multi-Zone connection configuration
        # FIXED: Updated to current namespace structure
        - name: YUGABYTEDB_HOSTS
          value: "yb-tserver-0.yb-tservers.codet-dev-yb.svc.cluster.local:5433,yb-tserver-0.yb-tservers.codet-staging-yb.svc.cluster.local:5433,yb-tserver-0.yb-tservers.codet-prod-yb.svc.cluster.local:5433"
        - name: YUGABYTEDB_USER
          value: "yugabyte"
        - name: YUGABYTEDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: yugabytedb-auth
              key: password
        # SECURITY: Database password for connector configuration
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: yugabytedb-auth
              key: password
        - name: YUGABYTEDB_DATABASE
          value: "yugabyte"
        
        # CDC stream configuration for multi-zone
        - name: CDC_STREAM_ID
          value: "multi-zone-cdc-stream"
        - name: CDC_CHECKPOINT_LOCATION
          value: "/var/lib/debezium/checkpoints"
        
        # Connector configuration
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: "redpanda-0.redpanda.kafka.svc.cluster.local:9092"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_GROUP_ID
          value: "yugabytedb-connect-cluster"
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: "yugabytedb-connect-configs"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: "yugabytedb-connect-offsets"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: "yugabytedb-connect-status"
        - name: CONNECT_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_PLUGIN_PATH
          value: "/kafka/connect,/debezium/connector"
        
        resources:
          requests:
            cpu: "1"
            memory: 2Gi
          limits:
            cpu: "2"
            memory: 4Gi
        
        volumeMounts:
        - name: checkpoint-storage
          mountPath: /var/lib/debezium/checkpoints
        - name: connector-config
          mountPath: /debezium/config
        
        livenessProbe:
          httpGet:
            path: /
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /connectors
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
      
      volumes:
      - name: checkpoint-storage
        persistentVolumeClaim:
          claimName: debezium-checkpoint-pvc
      - name: connector-config
        configMap:
          name: debezium-connector-config

---
# Persistent Volume Claim for checkpoint storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: debezium-checkpoint-pvc
  namespace: kafka
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ssd-debezium
  resources:
    requests:
      storage: 10Gi

---
# ConfigMap for Debezium connector configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: debezium-connector-config
  namespace: kafka
data:
  yugabytedb-connector.json: |
    {
      "name": "yugabytedb-multi-zone-connector",
      "config": {
        "connector.class": "io.debezium.connector.yugabytedb.YugabyteDBConnector",
        "database.hostname": "yb-tserver-0.yb-tservers.codet-dev-yb.svc.cluster.local,yb-tserver-0.yb-tservers.codet-staging-yb.svc.cluster.local,yb-tserver-0.yb-tservers.codet-prod-yb.svc.cluster.local",
        "database.port": "5433",
        "database.user": "yugabyte",
        "database.password": "${DATABASE_PASSWORD}",
        "database.dbname": "yugabyte",
        "database.server.name": "yugabytedb-multizone",
        "table.include.list": "public.customers,public.orders,public.products",
        "stream.params": "checkpoint_location=/var/lib/debezium/checkpoints",
        "tasks.max": "3",
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable": "false",
        "value.converter.schemas.enable": "false",
        "topic.prefix": "yugabytedb-multizone",
        "snapshot.mode": "initial",
        "publication.autocreate.mode": "filtered"
      }
    }

---
# Service Account for Debezium
apiVersion: v1
kind: ServiceAccount
metadata:
  name: debezium-connector
  namespace: kafka

---
# Service for Debezium REST API
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect-api
  namespace: kafka
  labels:
    app: debezium
    component: yugabytedb-connector
spec:
  selector:
    app: debezium
    component: yugabytedb-connector
  ports:
  - name: rest-api
    port: 8083
    targetPort: 8083
  - name: jolokia
    port: 8778
    targetPort: 8778
  type: ClusterIP

---
# Horizontal Pod Autoscaler for Debezium
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: debezium-connector-hpa
  namespace: kafka
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: debezium-yugabytedb-connector
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 